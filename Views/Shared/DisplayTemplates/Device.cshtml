@model DeviceViewModel
@inject IReadOnlyDbContext db
@using EasyMongoNet.Model

<div class="card my-4" style="background-color:#eee;">
    <div class="card-header">
        @Html.Raw(Model.GetPlaceDisplay(db))
        @if (User.FindFirst(nameof(Permission)).Value.Contains(nameof(Permission.EditPlacesAndDevices)))
        {
            <div class="float-left">
                <a class="edit" asp-controller="Device" asp-action="Edit" asp-route-id="@Model.Id.ToString()" title="ویرایش">
                    <img src="~/lib/bootstrap-icons/icons/pencil.svg" width="24" />
                </a>
            </div>
        }
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-lg-3 col-sm-6">
                <label>@Html.DisplayNameFor(m => m.Type):</label>
                <span class="text-value">
                    @DisplayUtils.DisplayName(Model.Type)
                </span>
            </div>
            <div class="col-lg-3 col-sm-6">
                <label>@Html.DisplayNameFor(m => m.Network):</label>
                <span class="text-value">
                    @DisplayUtils.DisplayName(Model.Network)
                </span>
            </div>
            <div class="col-lg-3 col-sm-6">
                <label>@Html.DisplayNameFor(m => m.Model):</label>
                <span class="text-value">
                    @Model.Model
                </span>
            </div>
            <div class="col-lg-3 col-sm-6">
                <label>آدرس:</label>
                <span class="text-value">
                    @Model.Address
                </span>
            </div>
        </div>
        @if (Model.UsedPorts != null && Model.UsedPorts.Count > 0)
        {
            <div class="card my-4">
                <div class="card-header" data-toggle="collapse" data-target="#ports" style="cursor:pointer;">
                    پورتهای استفاده شده (@Model.UsedPorts.Count)
                </div>
                <div class="card-body collapse" id="ports">
                    <div class="d-flex flex-wrap" dir="ltr">
                        @foreach (var p in Model.UsedPorts)
                        {
                            <a class="m-1 p-2 alert-dark" href="/Connection/Item/@(p.Connection.ToString())#endpoint_@(p.Connection)_@(p.EndPointIndex)">
                                @p.PortNumber
                            </a>
                        }
                    </div>
                </div>
            </div>
        }
        @if (Model.Logs != null && Model.Logs.Count > 0 && User.FindFirst(nameof(Permission)).Value.Contains(nameof(Permission.ViewUserLogs)))
        {
            <div class="card my-4">
                <div class="card-header" data-toggle="collapse" data-target="#logs" style="cursor:pointer;">
                    عملیات انجام شده توسط کاربران (@Model.Logs.Count)
                </div>
                <div class="card-body collapse" id="logs">
                    <div class="d-flex flex-wrap">
                        @foreach (var l in Model.Logs)
                        {
                            <div class="m-1 p-2 alert-dark">
                                <small>@PersianDateUtils.GetPersianDateString(l.Time) </small><br />
                                @l.User <br />
                                @{
                                    switch (l.ActivityType)
                                    {
                                        case ActivityType.Delete:
                                            <span class="text-danger">حذف</span>
                                            break;
                                        case ActivityType.Insert:
                                            <span class="text-info">ایجاد</span>
                                            break;
                                        case ActivityType.Update:
                                            <span class="text-success">بروز رسانی</span>
                                            break;
                                        default:
                                            throw new NotImplementedException();
                                    }
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

</div>