@model ConnectionSearchViewModel
@inject IEnumerable<City> Cities
@inject Settings settings

@{
    ViewData["Title"] = "جستجوی لینک ها";
}

@if (User.FindFirst(nameof(Permission)).Value.Contains(nameof(Permission.EditConnections)))
{
    <a asp-action="Add" class="btn btn-info">تعریف لینک جدید</a>
}
<div class="mt-5">تعداد کل لینکهای تعریف شده: @Model.TotalLinksCount</div>
<hr />

<h2 class="mt-5">جستجوی مستقیم</h2>

<form asp-action="Go" method="get">
    <div class="row mt-4">
        <div class="col-lg-3 col-sm-6 form-group">
            <label class="control-label">شماره لینک</label>
            <input type="number" name="linkNumber" class="form-control" required />
        </div>
        <div class="col-lg-3 col-sm-6 d-flex align-items-end form-group">
            <input type="submit" class="btn btn-primary" value="برو" />
        </div>
    </div>
</form>
<hr />

<h2 class="mt-5">جستجوی پیشرفته</h2>

<form asp-action="Index">
    <div class="row mt-4">
        <div class="col-lg-3 col-sm-6 form-group">
            <label class="control-label">شهر</label>
            <select asp-for="City" class="form-control">
                <option disabled selected>انتخاب کنید</option>
                @foreach (var city in Cities)
                {
                    <option value="@city.Id.ToString()">@city.Name</option>
                }
            </select>
            <span asp-validation-for="City" class="text-danger"></span>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="Center" class="control-label"></label>
            <select asp-for="Center" class="form-control"></select>
            <span asp-validation-for="Center" class="text-danger"></span>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="Building" class="control-label"></label>
            <select asp-for="Building" class="form-control"></select>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="Room" class="control-label"></label>
            <select asp-for="Room" class="form-control"></select>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="Rack" class="control-label"></label>
            <select asp-for="Rack" class="form-control"></select>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="Device" class="control-label"></label>
            <select asp-for="Device" class="form-control"></select>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="SearchType" class="control-label"></label>
            <select asp-for="SearchType" class="form-control">
                @foreach (var item in DisplayUtils.GetEnumValues<ConnectionSearchViewModel.EndPointSearchType>())
                {
                    <option value="@item">@DisplayUtils.DisplayName(item)</option>
                }
            </select>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="PortType" class="control-label"></label>
            <select asp-for="PortType" class="form-control">
                <option>همه</option>
                @foreach (var item in DisplayUtils.GetEnumValues<EndPoint.PortTypeEnum>())
                {
                    <option value="@item">@DisplayUtils.DisplayName(item)</option>
                }
            </select>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="Module" class="control-label"></label>
            <select asp-for="Module" class="form-control">
                <option>همه</option>
                @foreach (var item in DisplayUtils.GetEnumValues<EndPoint.ModuleType>())
                {
                    <option value="@item">@DisplayUtils.DisplayName(item)</option>
                }
            </select>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="PatchCord" class="control-label"></label>
            <select asp-for="PatchCord" class="form-control">
                <option>همه</option>
                @foreach (var item in DisplayUtils.GetEnumValues<EndPoint.PatchCordType>())
                {
                    <option value="@item">@DisplayUtils.DisplayName(item)</option>
                }
            </select>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="Connector" class="control-label"></label>
            <select asp-for="Connector" class="form-control">
                <option>همه</option>
                @foreach (var item in DisplayUtils.GetEnumValues<EndPoint.ConnectorType>())
                {
                    <option value="@item">@DisplayUtils.DisplayName(item)</option>
                }
            </select>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="DataProtection" class="control-label"></label>
            <select asp-for="DataProtection" class="form-control">
                <option>همه</option>
                <option value="true">بلی</option>
                <option value="false">خیر</option>
            </select>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="TransmissionProtection" class="control-label"></label>
            <select asp-for="TransmissionProtection" class="form-control">
                <option>همه</option>
                <option value="true">بلی</option>
                <option value="false">خیر</option>
            </select>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="Incomplete" class="control-label"></label>
            <select asp-for="Incomplete" class="form-control">
                <option>همه</option>
                <option value="true">بلی</option>
                <option value="false">خیر</option>
            </select>
        </div>
        <div class="col-lg-3 col-sm-6 form-group">
            <label asp-for="NetworkType" class="control-label"></label>
            <select asp-for="NetworkType" class="form-control">
                @foreach (var item in DisplayUtils.GetEnumValues<ConnectionSearchViewModel.DeviceNetworkType>())
                {
                    <option value="@item">@DisplayUtils.DisplayName(item)</option>
                }
            </select>
        </div>
    </div>
    <div class="mt-2">
        <input type="submit" class="btn btn-primary" value="جستجو" />
    </div>
</form>
<hr />

@if (@Model.SearchResult != null)
{
    <div class="mt-5">
        <p>تعداد نتیجه: @Model.SearchResult.Count</p>
        @for (int i = 0; i < Model.SearchResult.Count; i++)
        {
            @Html.DisplayFor(m => Model.SearchResult[i]);
        }
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(window).ready(function () {
            var city = $("#City").val();
            if (city) {
                $("#City").triggerHandler("change");
            }
        });

        var dropdownsToClear = [$("#Center"), $("#Building"), $("#Room"), $("#Rack"), $("#Device")];

        function ClearDropdownsAfter(offset) {
            for (var i = offset; i < dropdownsToClear.length; i++)
                removeOptionsOfDropDown(dropdownsToClear[i], { disabledInitMsg: false });
        }

        $("#City").change(function () {
            ClearDropdownsAfter(0);
            var id = $(this).val();
            $.get("/Place/Centers?city=" + id + "&onlyUsed=true", function (res) {
                $.each(res, function (index, item) {
                    $("#Center").append("<option value='" + item.id + "'>" + item.text + "</option>");
                });
                if ("@Model.Center") {
                    $("#Center").val("@Model.Center");
                    $("#Center").trigger("change");
                }
                //$("#Center").select2(select2BaseSettings);

            });
        });

        $("#Center").change(function () {
            ClearDropdownsAfter(1);
            var id = $(this).val();
            $.get("/Place/Buildings?center=" + id, function (res) {
                $.each(res, function (index, item) {
                    $("#Building").append("<option value='" + item.id + "'>" + item.text + "</option>");
                });
            });
        });

        $("#Building").change(function () {
            ClearDropdownsAfter(2);
            var id = $(this).val();
            $.get("/Place/Rooms?building=" + id, function (res) {
                $.each(res, function (index, item) {
                    $("#Room").append("<option value='" + item.id + "'>" + item.text + "</option>");
                });
            });
        });

        $("#Room").change(function () {
            ClearDropdownsAfter(3);
            var id = $(this).val();
            $.get("/Place/Racks?room=" + id, function (res) {
                $.each(res, function (index, item) {
                    $("#Rack").append("<option value='" + item.id + "'>" + item.text + "</option>");
                });
            });
        });

        $("#Rack").change(function () {
            ClearDropdownsAfter(4);
            var id = $(this).val();
            $.get("/Place/Devices?rack=" + id, function (res) {
                $.each(res, function (index, item) {
                    $("#Device").append("<option value='" + item.id + "'>" + item.text + "</option>");
                });
            });
        });

        function LoadConnectionGraph(id) {
            var divGraph = $("#divGraph_" + id);
            if (divGraph.children().length == 0) {
                $.get("/Graph/Connection/" + id, function (res) {
                    initGojs("divGraph_" + id, res, "@settings.CustomerDetailsUrl");
                });
            }
        }
    </script>
}