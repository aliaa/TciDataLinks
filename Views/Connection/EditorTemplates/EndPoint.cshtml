@model EndPointViewModel
@inject IReadOnlyDbContext db

@{
    int hue = (Model.Index * 35 + 60) % 360;
}

<div class="card my-4">
    <div class="card-header" style="background-color: hsl(@hue , 25%, 88%); color: hsl(@hue , 80%, 32%);">
        <div class="float-right">اتصال @(Model.Index+1)</div>
        <div class="text-center">@Model.GetPlaceDisplay(db)</div>
    </div>
    <div class="card-body" style="background-color: hsl(@hue , 40%, 88%);">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="Building" />
        <input type="hidden" asp-for="Device" />
        <input type="hidden" asp-for="Index" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row">
            <div class="form-group col-lg-3 col-sm-6">
                <label asp-for="PortType" class="control-label"></label>
                <select asp-for="PortType" class="form-control">
                    @foreach (var item in Enum.GetNames(typeof(EndPoint.PortTypeEnum)))
                    {
                        <option value="@item">@Utils.GetDisplayNameOfMember(typeof(EndPoint.PortTypeEnum), item)</option>
                    }
                </select>
                <span asp-validation-for="PortType" class="text-danger"></span>
            </div>
            <div class="form-group col-lg-3 col-sm-6">
                <label asp-for="PortNumber" class="control-label"></label>
                <input asp-for="PortNumber" class="form-control" />
                <span asp-validation-for="PortNumber" class="text-danger"></span>
            </div>
            <div class="form-group col-lg-3 col-sm-6">
                <label asp-for="Speed" class="control-label"></label>
                <input asp-for="Speed" class="form-control" />
                <span asp-validation-for="Speed" class="text-danger"></span>
            </div>
            <div class="form-group col-lg-3 col-sm-6">
                <label asp-for="SpeedUnit" class="control-label"></label>
                <select asp-for="SpeedUnit" class="form-control">
                    @foreach (var item in Enum.GetNames(typeof(EndPoint.SpeedUnitEnum)))
                    {
                        <option value="@item">@item</option>
                    }
                </select>
                <span asp-validation-for="SpeedUnit" class="text-danger"></span>
            </div>
            <div class="form-group col-lg-3 col-sm-6">
                <label asp-for="Module" class="control-label"></label>
                <select asp-for="Module" class="form-control">
                    @foreach (var item in Enum.GetNames(typeof(EndPoint.ModuleType)))
                    {
                        <option value="@item">@Utils.GetDisplayNameOfMember(typeof(EndPoint.ModuleType), item)</option>
                    }
                </select>
                <span asp-validation-for="Module" class="text-danger"></span>
            </div>
            <div class="form-group col-lg-3 col-sm-6">
                <label asp-for="PatchCord" class="control-label"></label>
                <select asp-for="PatchCord" class="form-control">
                    @foreach (var item in Enum.GetNames(typeof(EndPoint.PatchCordType)))
                    {
                        <option value="@item">@Utils.GetDisplayNameOfMember(typeof(EndPoint.PatchCordType), item)</option>
                    }
                </select>
                <span asp-validation-for="PatchCord" class="text-danger"></span>
            </div>
            <div class="form-group col-lg-3 col-sm-6">
                <label asp-for="Connector" class="control-label"></label>
                <select asp-for="Connector" class="form-control">
                    @foreach (var item in Enum.GetNames(typeof(EndPoint.ConnectorType)))
                    {
                        <option value="@item">@Utils.GetDisplayNameOfMember(typeof(EndPoint.ConnectorType), item)</option>
                    }
                </select>
                <span asp-validation-for="Connector" class="text-danger"></span>
            </div>
            <div class="col-lg-3 col-sm-6">
                <div class="form-group">
                    <label asp-for="DistanceToNextPoint" class="control-label"></label>
                    <input asp-for="DistanceToNextPoint" class="form-control" />
                    <span asp-validation-for="DistanceToNextPoint" class="text-danger"></span>
                </div>
            </div>
            <div class="col-lg-3 col-sm-6">
                <div class="form-group">
                    <label>
                        <input asp-for="DataProtection" /> @Html.DisplayNameFor(model => model.DataProtection)
                    </label>
                </div>
            </div>
            <div class="col-lg-3 col-sm-6">
                <div class="form-group">
                    <label>
                        <input asp-for="TransmissionProtection" /> @Html.DisplayNameFor(model => model.TransmissionProtection)
                    </label>
                </div>
            </div>
            <div class="col-lg-3 col-sm-6">
                <div class="form-group">
                    <label>
                        <input asp-for="Incomplete" /> @Html.DisplayNameFor(model => model.Incomplete)
                    </label>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div id="divPassives_@Model.Index" class="my-4">
            @for (var i = 0; i < Model.PassiveConnectionViewModels.Count; i++)
            {
                @Html.EditorFor(m => Model.PassiveConnectionViewModels[i], "PassiveConnection");
            }
        </div>
        <div class="text-center my-4">
            <input id="btnNewPassive" type="button" class="btn btn-secondary" value="اتصال Passive جدید" onclick="ShowNewPassiveDialog(@Model.Index)" />
            <input id="btnRemoveLastPassive" type="button" class="btn btn-outline-danger mx-4 d-none" value="حذف آخرین اتصال Passive" onclick="RemoveLastPassive(@Model.Index)" />
        </div>
    </div>
</div>
