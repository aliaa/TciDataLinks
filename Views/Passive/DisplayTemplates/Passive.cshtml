@model PassiveViewModel
@inject IReadOnlyDbContext db

<div class="card my-5" style="background-color:#eee;">
    <div class="card-header">
        @Html.Raw(Model.GetPlaceDisplay(db))
        @if (User.FindFirst(nameof(Permission)).Value.Contains(nameof(Permission.EditPlacesAndDevices)))
        {
            <div class="float-left">
                <a class="edit" asp-action="Edit" asp-route-id="@Model.Id.ToString()" title="ویرایش">
                    <img src="~/lib/bootstrap-icons/icons/pencil.svg" width="24" />
                </a>
            </div>
        }
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-lg-3 col-sm-6">
                <label>@Html.DisplayNameFor(m => m.Type):</label>
                <span class="text-value">
                    @Utils.GetDisplayNameOfMember(typeof(Passive.PassiveTypeEnum), Model.Type.ToString())
                </span>
            </div>
            @if (Model.Type == Passive.PassiveTypeEnum.PatchPanel)
            {
                <div class="col-lg-3 col-sm-6">
                    <label>@Html.DisplayNameFor(m => m.PatchPanelType):</label>
                    <span class="text-value">
                        @Utils.GetDisplayNameOfMember(typeof(Passive.PatchPanelTypeEnum), Model.PatchPanelType.ToString())
                    </span>
                </div>
            }
            else
            {
                <div class="col-lg-3 col-sm-6">
                    <label>@Html.DisplayNameFor(m => m.TransmissionType):</label>
                    <span class="text-value">
                        @Utils.GetDisplayNameOfMember(typeof(TransmissionSystemType), Model.TransmissionType.ToString())
                    </span>
                </div>
            }
            <div class="col-lg-3 col-sm-6">
                <label>@Html.DisplayNameFor(m => m.Name):</label>
                <span class="text-value">
                    @Model.Name
                </span>
            </div>
        </div>
    </div>
</div>