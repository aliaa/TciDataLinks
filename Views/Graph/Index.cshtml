@inject IEnumerable<City> Cities

@{
    ViewData["Title"] = "گراف شبکه";
}

<h1>گراف شبکه</h1>

<div class="row mt-5">
    <div class="col-lg-3 col-sm-6 form-group">
        <label class="control-label">شهر</label>
        <select id="City" class="form-control">
            @foreach (var city in Cities)
            {
                <option value="@city.Id.ToString()">@city.Name</option>
            }
        </select>
    </div>
    <div class="col-lg-3 col-sm-6 form-group">
        <label class="control-label">مرکز</label>
        <select id="Center" class="form-control"></select>
    </div>
    <div class="col-lg-3 col-sm-6 form-group">
        <label class="control-label">نوع شبکه</label>
        <select id="NetworkType" class="form-control">
            <option value="all">همه</option>
            @foreach(var t in Enum.GetNames(typeof(Device.NetworkType)))
            {
                <option value="@t">@Utils.DisplayName(typeof(Device.NetworkType), t)</option>
            }
        </select>
    </div>
</div>
<div class="mt-2">
    <button id="btnShowGraph" class="btn btn-primary">نمایش گراف</button>
</div>

<div id="divResult" class="d-none mt-5">
    <div id="divGraph" dir="ltr" style="border: solid 1px black; height: 700px; margin-left:-3em; margin-right:-3em;"></div>
    @if (User.FindFirst(nameof(Permission)).Value.Contains(nameof(Permission.ChangeGraphOrders)))
    {
        <div class="mt-4">
            <button id="btnSaveOrders" class="btn btn-primary">ذخیره چینش</button>
        </div>
    }
    <p class="mt-4">توجه: برای رفتن به جزئیات هر کدام از اشکال موجود (مکانها، دستگاهها و اتصالها)، روی آن دوبار کلیک کنید.</p>
    <p class="mb-4">توجه: برای زوم کردن، موس را روی گراف نگه داشته، دکمه <kbd>Ctrl</kbd> را نگه داشته و اسکرول موس را بچرخانید.</p>
</div>


@section Scripts {
    <script>
        $(window).ready(function () {
            var city = $("#City").val();
            if (city) {
                $("#City").triggerHandler("change");
            }
        });

        $("#City").change(function () {
            removeOptionsOfDropDown($("#Center"), { initMsg: null });
            var id = $(this).val();
            $.get("/Place/Centers?city=" + id + "&onlyUsed=true", function (res) {
                $.each(res, function (index, item) {
                    $("#Center").append("<option value='" + item.id + "'>" + item.text + "</option>");
                });
                //$("#Center").select2(select2BaseSettings);

            });
        });

        var diagram = null;
        $("#btnShowGraph").click(function () {
            $("#divResult").removeClass("d-none");
            var url = "/Graph/Center/" + $("#Center").val();
            var networkType = $("#NetworkType").val();
            if (networkType != "all")
                url = url + "?NetworkType=" + networkType;
            $.get(url, function (res) {
                diagram = initGojs("divGraph", res);
            });
        });

        $("#btnSaveOrders").click(function () {
            var list = [];
            diagram.nodes.each(function (n) {
                list.push({ key: n.data.key, loc: { x: n.location.x, y: n.location.y } });
            });
            var data = { center: $("#Center").val(), nodeLocations: list };
            $.ajax({ url: "/Graph/SaveOrders", type: "POST", data: JSON.stringify(data), contentType: "application/json" });
        });
    </script>
}
